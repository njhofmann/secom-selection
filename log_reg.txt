training results for model: log_reg, selector function: f_classif, percentile: 1
info: 0
selected features: [ 54  96 192 293 409]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7979591836734694, precision=0.21052631578947367, recall=0.8, f1=0.3333333333333333, roc_auc=0.7979591836734694)

info: 1
selected features: [ 54  96 293 351 409]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.601360544217687, precision=0.12121212121212122, recall=0.4, f1=0.186046511627907, roc_auc=0.601360544217687)

info: 2
selected features: [ 54  96 351 354 409]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6741496598639456, precision=0.13953488372093023, recall=0.6, f1=0.22641509433962265, roc_auc=0.6741496598639456)

info: 3
selected features: [ 19  54  96 293 351]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7711706102117062, precision=0.22857142857142856, recall=0.7272727272727273, f1=0.34782608695652173, roc_auc=0.7711706102117062)

info: 4
selected features: [ 54  96 293 351 409]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6631382316313823, precision=0.15789473684210525, recall=0.5454545454545454, f1=0.24489795918367344, roc_auc=0.6631382316313823)

info: 5
selected features: [ 19  54  96 293 409]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5937110834371109, precision=0.11363636363636363, recall=0.45454545454545453, f1=0.18181818181818182, roc_auc=0.5937110834371109)

info: 6
selected features: [ 54  96 293 350 351]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.8063511830635118, precision=0.23076923076923078, recall=0.8181818181818182, f1=0.36000000000000004, roc_auc=0.806351183063512)

info: 7
selected features: [ 26  54  96 351 409]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7301369863013698, precision=0.16666666666666666, recall=0.7, f1=0.2692307692307692, roc_auc=0.7301369863013698)

info: 8
selected features: [ 54  96 122 293 409]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.660958904109589, precision=0.16129032258064516, recall=0.5, f1=0.24390243902439024, roc_auc=0.660958904109589)

info: 9
selected features: [ 54  96 293 351 409]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6767123287671233, precision=0.14285714285714285, recall=0.6, f1=0.23076923076923073, roc_auc=0.6767123287671234)

score averages:
average balanced accuracy: 0.6975648715276895
average precision: 0.1672959212646108
average recall: 0.6145454545454545
average f1 score: 0.26242396062836304
average roc auc score: 0.6975648715276895
feature counts: Counter({54: 10, 96: 10, 293: 8, 409: 8, 351: 7, 19: 2, 192: 1, 354: 1, 350: 1, 26: 1, 122: 1})
feature stability score: 0.8666666666666667


training results for model: log_reg, selector function: mutual_info_classif, percentile: 1
info: 0
selected features: [ 39 276 387 459 461]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6221088435374149, precision=0.0945945945945946, recall=0.7, f1=0.16666666666666669, roc_auc=0.6221088435374149)

info: 1
selected features: [ 31 211 276 457 461]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7517006802721089, precision=0.12048192771084337, recall=1.0, f1=0.21505376344086022, roc_auc=0.7517006802721089)

info: 2
selected features: [120 243 333 387 425]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5527210884353742, precision=0.07936507936507936, recall=0.5, f1=0.13698630136986303, roc_auc=0.5527210884353742)

info: 3
selected features: [ 31  39 232 367 461]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.438667496886675, precision=0.05333333333333334, recall=0.36363636363636365, f1=0.0930232558139535, roc_auc=0.43866749688667506)

info: 4
selected features: [ 38 276 363 454 460]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.4900373599003736, precision=0.06666666666666667, recall=0.36363636363636365, f1=0.11267605633802817, roc_auc=0.49003735990037367)

info: 5
selected features: [ 60 127 363 387 425]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.42061021170610213, precision=0.045454545454545456, recall=0.2727272727272727, f1=0.07792207792207792, roc_auc=0.42061021170610213)

info: 6
selected features: [ 39  60 329 387 455]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5526151930261519, precision=0.08928571428571429, recall=0.45454545454545453, f1=0.1492537313432836, roc_auc=0.5526151930261519)

info: 7
selected features: [ 39 387 454 459 461]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5431506849315069, precision=0.07407407407407407, recall=0.6, f1=0.13186813186813187, roc_auc=0.5431506849315069)

info: 8
selected features: [117 337 387 425 457]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5047945205479452, precision=0.06557377049180328, recall=0.4, f1=0.11267605633802817, roc_auc=0.5047945205479452)

info: 9
selected features: [ 39 337 363 425 461]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5171232876712328, precision=0.0684931506849315, recall=0.5, f1=0.12048192771084336, roc_auc=0.517123287671233)

score averages:
average balanced accuracy: 0.5393529366914885
average precision: 0.0757322856661586
average recall: 0.5154545454545455
average f1 score: 0.13166079688117366
average roc auc score: 0.5393529366914885
feature counts: Counter({387: 6, 39: 5, 461: 5, 425: 4, 276: 3, 363: 3, 459: 2, 31: 2, 457: 2, 454: 2, 60: 2, 337: 2, 211: 1, 120: 1, 243: 1, 333: 1, 232: 1, 367: 1, 38: 1, 460: 1, 127: 1, 329: 1, 455: 1, 117: 1})
feature stability score: 0.5777777777777777


training results for model: log_reg, selector function: f_classif, percentile: 5
info: 0
selected features: [ 19  20  24  26  31  54  96 114 117 122 154 155 156 192 253 254 255 293
 350 351 354 355 356 409]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6833333333333333, precision=0.125, recall=0.7, f1=0.21212121212121213, roc_auc=0.6833333333333335)

info: 1
selected features: [ 19  26  54  96 114 117 118 122 151 154 192 250 253 268 293 350 351 354
 355 356 409 435 438 441]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.676530612244898, precision=0.1206896551724138, recall=0.7, f1=0.2058823529411765, roc_auc=0.676530612244898)

info: 2
selected features: [ 19  26  31  54  96 114 117 122 151 154 155 192 249 250 253 254 255 293
 350 351 354 355 356 409]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7435374149659864, precision=0.14814814814814814, recall=0.8, f1=0.25, roc_auc=0.7435374149659864)

info: 3
selected features: [ 19  24  26  54  96 122 150 151 154 155 156 249 250 253 254 255 268 293
 350 351 354 355 356 409]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6562889165628891, precision=0.15, recall=0.5454545454545454, f1=0.2352941176470588, roc_auc=0.6562889165628891)

info: 4
selected features: [ 19  26  31  54  59  73  96 107 114 116 117 122 151 169 192 250 268 293
 350 351 354 355 369 409]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7344333748443338, precision=0.15, recall=0.8181818181818182, f1=0.2535211267605634, roc_auc=0.7344333748443338)

info: 5
selected features: [ 19  26  31  54  59  73  96 114 117 118 122 126 154 155 192 253 268 293
 350 351 354 355 356 409]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6332503113325031, precision=0.11475409836065574, recall=0.6363636363636364, f1=0.19444444444444445, roc_auc=0.6332503113325032)

info: 6
selected features: [ 19  26  54  59  96 107 118 122 151 154 155 192 217 250 253 254 293 320
 350 351 354 355 356 409]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6366749688667497, precision=0.11666666666666667, recall=0.6363636363636364, f1=0.1971830985915493, roc_auc=0.6366749688667497)

info: 7
selected features: [ 19  24  26  31  54  73  96 118 122 154 155 169 253 254 268 293 350 351
 354 355 356 369 387 409]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6595890410958904, precision=0.1276595744680851, recall=0.6, f1=0.21052631578947367, roc_auc=0.6595890410958903)

info: 8
selected features: [ 19  26  54  96 117 122 143 151 154 155 156 192 242 250 253 254 255 293
 350 351 354 355 356 409]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.8301369863013699, precision=0.20454545454545456, recall=0.9, f1=0.33333333333333337, roc_auc=0.8301369863013699)

info: 9
selected features: [ 19  26  31  54  96 114 116 117 118 122 151 154 169 192 250 253 268 293
 350 351 354 355 356 409]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6410958904109589, precision=0.10294117647058823, recall=0.7, f1=0.1794871794871795, roc_auc=0.6410958904109589)

score averages:
average balanced accuracy: 0.6894870849958913
average precision: 0.1360404773832012
average recall: 0.7036363636363636
average f1 score: 0.2271793181115991
average roc auc score: 0.6894870849958913
feature counts: Counter({19: 10, 26: 10, 54: 10, 96: 10, 122: 10, 293: 10, 350: 10, 351: 10, 354: 10, 355: 10, 409: 10, 154: 9, 253: 9, 356: 9, 192: 8, 117: 7, 155: 7, 151: 7, 250: 7, 31: 6, 114: 6, 254: 6, 268: 6, 118: 5, 255: 4, 24: 3, 156: 3, 59: 3, 73: 3, 169: 3, 249: 2, 107: 2, 116: 2, 369: 2, 20: 1, 435: 1, 438: 1, 441: 1, 150: 1, 126: 1, 217: 1, 320: 1, 387: 1, 143: 1, 242: 1})
feature stability score: 0.9027777777777778


training results for model: log_reg, selector function: mutual_info_classif, percentile: 5
info: 0
selected features: [  2  33  39  50 118 119 131 165 230 232 276 328 334 336 337 363 387 424
 425 454 455 457 459 461]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5265306122448979, precision=0.07272727272727272, recall=0.4, f1=0.12307692307692307, roc_auc=0.5265306122448979)

info: 1
selected features: [ 35  38  39  60 117 121 127 139 169 226 263 264 284 329 333 348 363 387
 425 454 455 457 458 461]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.47891156462585033, precision=0.057971014492753624, recall=0.4, f1=0.10126582278481013, roc_auc=0.4789115646258503)

info: 2
selected features: [ 38  39  51  64  78 105 115 119 120 121 163 243 263 329 348 363 364 387
 414 425 454 455 459 461]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.4119047619047619, precision=0.0410958904109589, recall=0.3, f1=0.07228915662650602, roc_auc=0.4119047619047619)

info: 3
selected features: [  5  17  31  33  38  39 123 163 165 230 231 232 233 243 262 265 276 336
 337 363 387 455 459 461]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6127023661270237, precision=0.1044776119402985, recall=0.6363636363636364, f1=0.17948717948717952, roc_auc=0.6127023661270237)

info: 4
selected features: [ 35  36  38  39  60 117 120 121 123 127 264 327 328 329 333 387 409 423
 425 455 457 459 461 467]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5261519302615193, precision=0.07692307692307693, recall=0.5454545454545454, f1=0.13483146067415733, roc_auc=0.5261519302615193)

info: 5
selected features: [ 39 115 117 120 121 123 125 126 225 226 231 276 327 328 329 337 348 377
 387 425 454 455 458 459]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5544831880448319, precision=0.08333333333333333, recall=0.6363636363636364, f1=0.14736842105263157, roc_auc=0.5544831880448319)

info: 6
selected features: [ 35  39  51  53  60  64  78 120 121 123 146 187 276 328 334 337 348 387
 409 425 454 455 457 461]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6127023661270237, precision=0.1044776119402985, recall=0.6363636363636364, f1=0.17948717948717952, roc_auc=0.6127023661270237)

info: 7
selected features: [ 35  36  38  39  51  60 123 165 168 214 231 233 264 265 276 337 363 366
 367 377 387 425 455 459]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5910958904109589, precision=0.08955223880597014, recall=0.6, f1=0.1558441558441558, roc_auc=0.5910958904109589)

info: 8
selected features: [ 31  38  39  60 115 125 165 211 243 267 276 327 328 329 348 367 387 425
 445 454 455 457 459 461]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5547945205479452, precision=0.08064516129032258, recall=0.5, f1=0.13888888888888887, roc_auc=0.5547945205479452)

info: 9
selected features: [ 31  39 115 117 120 121 123 130 231 233 243 276 327 329 333 337 387 425
 429 454 455 457 459 461]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6397260273972603, precision=0.09523809523809523, recall=0.8, f1=0.1702127659574468, roc_auc=0.6397260273972604)

score averages:
average balanced accuracy: 0.5509003227692073
average precision: 0.08064413071023804
average recall: 0.5454545454545454
average f1 score: 0.14027519538798786
average roc auc score: 0.5509003227692073
feature counts: Counter({39: 10, 387: 10, 455: 10, 425: 9, 459: 8, 461: 8, 276: 7, 454: 7, 337: 6, 457: 6, 38: 6, 121: 6, 329: 6, 123: 6, 328: 5, 363: 5, 60: 5, 348: 5, 120: 5, 165: 4, 35: 4, 117: 4, 115: 4, 243: 4, 231: 4, 327: 4, 264: 3, 333: 3, 51: 3, 31: 3, 233: 3, 33: 2, 119: 2, 230: 2, 232: 2, 334: 2, 336: 2, 127: 2, 226: 2, 263: 2, 458: 2, 64: 2, 78: 2, 163: 2, 265: 2, 36: 2, 409: 2, 125: 2, 377: 2, 367: 2, 2: 1, 50: 1, 118: 1, 131: 1, 424: 1, 139: 1, 169: 1, 284: 1, 105: 1, 364: 1, 414: 1, 5: 1, 17: 1, 262: 1, 423: 1, 467: 1, 126: 1, 225: 1, 53: 1, 146: 1, 187: 1, 168: 1, 214: 1, 366: 1, 211: 1, 267: 1, 445: 1, 130: 1, 429: 1})
feature stability score: 0.7453703703703703


training results for model: log_reg, selector function: f_classif, percentile: 10
info: 0
selected features: [ 12  19  20  24  26  31  54  59  73  96 104 107 114 115 116 117 118 120
 122 123 150 151 154 155 156 169 182 192 217 249 250 253 254 255 268 282
 293 320 350 351 354 355 356 357 369 378 409 466]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6911564625850339, precision=0.15789473684210525, recall=0.6, f1=0.25, roc_auc=0.691156462585034)

info: 1
selected features: [ 12  19  20  24  26  31  51  54  59  63  72  73  96 107 114 115 116 117
 118 120 122 123 150 151 154 155 156 169 192 215 217 249 250 253 254 255
 268 293 320 350 351 354 355 356 369 381 409 414]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7037414965986395, precision=0.14, recall=0.7, f1=0.23333333333333336, roc_auc=0.7037414965986394)

info: 2
selected features: [ 12  19  20  24  26  54  73  96 107 114 115 116 117 118 120 122 123 150
 151 154 155 156 157 169 192 215 217 249 250 253 254 255 268 293 320 350
 351 354 355 356 357 363 369 409 410 435 438 441]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6071428571428572, precision=0.10638297872340426, recall=0.5, f1=0.17543859649122806, roc_auc=0.6071428571428571)

info: 3
selected features: [ 12  19  20  24  26  31  51  53  54  59  73  96 107 114 115 116 117 118
 120 122 123 126 150 151 154 155 156 169 192 215 217 249 250 253 254 255
 268 293 320 350 351 354 355 356 357 369 376 409]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6665628891656289, precision=0.16216216216216217, recall=0.5454545454545454, f1=0.25, roc_auc=0.6665628891656289)

info: 4
selected features: [ 19  20  24  26  31  54  58  59  70  96 107 114 115 116 117 118 122 123
 150 151 154 155 156 169 178 179 181 187 192 217 249 250 253 254 255 268
 286 293 320 350 351 354 355 356 379 381 387 409]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6572229140722292, precision=0.12962962962962962, recall=0.6363636363636364, f1=0.21538461538461537, roc_auc=0.6572229140722291)

info: 5
selected features: [ 12  19  20  24  26  31  53  54  59  63  73  96 104 107 114 115 117 118
 120 122 123 150 151 154 155 156 169 179 182 192 217 249 250 253 254 255
 268 293 320 350 351 354 355 356 369 376 379 409]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6562889165628891, precision=0.15, recall=0.5454545454545454, f1=0.2352941176470588, roc_auc=0.6562889165628891)

info: 6
selected features: [ 12  19  26  31  54  59  89  96 114 115 116 117 118 120 122 123 126 150
 151 154 155 156 157 169 182 192 249 250 253 254 255 268 293 350 351 354
 355 356 357 369 376 409 434 435 437 438 440 441]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6699875466998755, precision=0.16666666666666666, recall=0.5454545454545454, f1=0.2553191489361702, roc_auc=0.6699875466998755)

info: 7
selected features: [ 19  24  26  31  54  59  60  70  73  84  89  93  96 114 115 117 118 119
 120 122 123 126 150 151 154 155 156 169 192 215 249 250 253 254 255 268
 293 350 351 354 355 356 357 369 378 409 410 414]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5219178082191781, precision=0.07142857142857142, recall=0.4, f1=0.12121212121212122, roc_auc=0.5219178082191781)

info: 8
selected features: [ 19  26  31  51  54  63  73  84  93  96 104 108 110 114 115 116 117 118
 120 122 123 126 151 154 155 169 172 181 182 192 215 250 253 254 268 282
 293 309 350 351 354 355 356 369 372 381 409 414]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.8013698630136986, precision=0.14705882352941177, recall=1.0, f1=0.25641025641025644, roc_auc=0.8013698630136986)

info: 9
selected features: [ 19  20  24  26  31  36  51  54  59  70  73  89  93  96 107 114 115 117
 118 120 122 123 143 150 151 154 155 156 169 192 215 242 249 250 253 254
 255 268 293 345 350 351 354 355 356 357 369 409]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5630136986301371, precision=0.09090909090909091, recall=0.4, f1=0.14814814814814814, roc_auc=0.563013698630137)

score averages:
average balanced accuracy: 0.6538404452690167
average precision: 0.1322132659891042
average recall: 0.5872727272727273
average f1 score: 0.21405403375629317
average roc auc score: 0.6538404452690166
feature counts: Counter({19: 10, 26: 10, 54: 10, 96: 10, 114: 10, 115: 10, 117: 10, 118: 10, 122: 10, 123: 10, 151: 10, 154: 10, 155: 10, 169: 10, 192: 10, 250: 10, 253: 10, 254: 10, 268: 10, 293: 10, 350: 10, 351: 10, 354: 10, 355: 10, 356: 10, 409: 10, 31: 9, 120: 9, 150: 9, 156: 9, 249: 9, 255: 9, 369: 9, 24: 8, 59: 8, 73: 8, 20: 7, 107: 7, 116: 7, 12: 6, 217: 6, 320: 6, 357: 6, 215: 6, 182: 4, 51: 4, 126: 4, 104: 3, 63: 3, 381: 3, 414: 3, 376: 3, 70: 3, 89: 3, 93: 3, 282: 2, 378: 2, 157: 2, 410: 2, 435: 2, 438: 2, 441: 2, 53: 2, 179: 2, 181: 2, 379: 2, 84: 2, 466: 1, 72: 1, 363: 1, 58: 1, 178: 1, 187: 1, 286: 1, 387: 1, 434: 1, 437: 1, 440: 1, 60: 1, 119: 1, 108: 1, 110: 1, 172: 1, 309: 1, 372: 1, 36: 1, 143: 1, 242: 1, 345: 1})
feature stability score: 0.9050925925925926


training results for model: log_reg, selector function: mutual_info_classif, percentile: 10
info: 0
selected features: [ 31  38  39  51  60  82 106 115 118 119 121 123 124 125 126 163 177 187
 225 231 233 243 264 265 274 276 283 328 329 337 348 363 367 387 409 412
 424 425 454 455 456 457 458 459 460 461 467 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5605442176870749, precision=0.08888888888888889, recall=0.4, f1=0.14545454545454545, roc_auc=0.5605442176870749)

info: 1
selected features: [  2   5  31  36  38  39  54  60 115 120 121 123 125 127 130 133 163 207
 215 230 231 232 233 243 264 272 276 284 306 327 328 329 333 334 337 363
 367 387 404 409 425 447 454 455 457 459 461 467]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7061224489795919, precision=0.12307692307692308, recall=0.8, f1=0.21333333333333335, roc_auc=0.7061224489795919)

info: 2
selected features: [  5  35  38  39  50  51  53  60  64  72 115 119 120 123 125 126 127 131
 164 177 225 230 232 233 264 276 328 329 333 337 348 363 387 424 425 426
 444 447 454 455 456 457 458 459 461 467 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.42653061224489797, precision=0.03773584905660377, recall=0.2, f1=0.06349206349206349, roc_auc=0.42653061224489797)

info: 3
selected features: [  2  17  35  37  38  39  50  54  58  60  64  72  81 117 120 121 123 125
 127 132 133 173 177 187 194 230 231 233 238 243 260 264 276 333 335 336
 337 348 368 387 409 425 454 455 457 459 461 467]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5818804483188045, precision=0.09210526315789473, recall=0.6363636363636364, f1=0.16091954022988506, roc_auc=0.5818804483188045)

info: 4
selected features: [  2   5  35  39  51  60 115 117 118 119 120 121 123 124 125 126 131 144
 168 173 224 225 226 230 232 233 245 264 267 276 327 329 333 335 337 348
 387 409 424 425 454 455 457 458 459 461 467 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6727895392278954, precision=0.11538461538461539, recall=0.8181818181818182, f1=0.20224719101123595, roc_auc=0.6727895392278954)

info: 5
selected features: [  5  17  31  35  36  38  39  51  60  64  78 115 118 119 120 121 123 125
 126 130 131 165 226 231 232 243 263 264 328 329 333 334 335 337 348 363
 387 409 424 425 454 455 457 458 459 461 470 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.46014943960149435, precision=0.060240963855421686, recall=0.45454545454545453, f1=0.10638297872340424, roc_auc=0.46014943960149435)

info: 6
selected features: [  2   5  23  25  31  37  38  39  64  82  85 115 117 119 121 123 124 125
 126 127 156 207 225 230 231 233 243 262 276 306 327 328 329 337 348 363
 367 387 424 425 447 454 455 456 457 459 460 461]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5124533001245329, precision=0.07317073170731707, recall=0.5454545454545454, f1=0.12903225806451613, roc_auc=0.512453300124533)

info: 7
selected features: [  2   5  30  31  33  35  36  38  39  60  64  78  85 120 121 123 124 125
 127 164 166 230 231 232 233 262 263 264 276 327 328 333 334 335 337 348
 363 364 367 387 409 414 425 455 457 459 461 473]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.539041095890411, precision=0.0784313725490196, recall=0.4, f1=0.13114754098360654, roc_auc=0.5390410958904109)

info: 8
selected features: [  2  31  34  35  36  38  39  54  60  78  83  85 123 125 130 133 134 144
 163 169 230 231 233 243 248 260 265 267 276 284 328 333 334 335 337 363
 367 387 409 425 447 454 455 457 458 459 461 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6595890410958904, precision=0.1276595744680851, recall=0.6, f1=0.21052631578947367, roc_auc=0.6595890410958903)

info: 9
selected features: [  2  17  23  31  38  39  60  85 106 115 118 120 123 125 126 127 215 225
 230 231 232 233 243 276 284 327 328 329 337 348 363 377 387 409 414 423
 424 425 445 454 455 457 458 459 461 467 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6219178082191781, precision=0.10344827586206896, recall=0.6, f1=0.17647058823529413, roc_auc=0.6219178082191781)

score averages:
average balanced accuracy: 0.5741017951389772
average precision: 0.09001424580068383
average recall: 0.5454545454545454
average f1 score: 0.1539006355317358
average roc auc score: 0.5741017951389771
feature counts: Counter({39: 10, 123: 10, 125: 10, 337: 10, 387: 10, 425: 10, 455: 10, 457: 10, 459: 10, 461: 10, 38: 9, 60: 9, 233: 9, 276: 9, 454: 9, 231: 8, 328: 8, 348: 8, 363: 8, 409: 8, 230: 8, 31: 7, 115: 7, 121: 7, 243: 7, 264: 7, 329: 7, 473: 7, 2: 7, 120: 7, 333: 7, 126: 6, 424: 6, 458: 6, 467: 6, 5: 6, 127: 6, 232: 6, 35: 6, 119: 5, 225: 5, 367: 5, 327: 5, 64: 5, 335: 5, 51: 4, 118: 4, 124: 4, 36: 4, 334: 4, 447: 4, 85: 4, 163: 3, 177: 3, 456: 3, 54: 3, 130: 3, 133: 3, 284: 3, 131: 3, 17: 3, 117: 3, 78: 3, 82: 2, 106: 2, 187: 2, 265: 2, 460: 2, 207: 2, 215: 2, 306: 2, 50: 2, 72: 2, 164: 2, 472: 2, 37: 2, 173: 2, 260: 2, 144: 2, 226: 2, 267: 2, 263: 2, 23: 2, 262: 2, 414: 2, 274: 1, 283: 1, 412: 1, 272: 1, 404: 1, 53: 1, 426: 1, 444: 1, 58: 1, 81: 1, 132: 1, 194: 1, 238: 1, 336: 1, 368: 1, 168: 1, 224: 1, 245: 1, 165: 1, 470: 1, 25: 1, 156: 1, 30: 1, 33: 1, 166: 1, 364: 1, 34: 1, 83: 1, 134: 1, 169: 1, 248: 1, 377: 1, 423: 1, 445: 1})
feature stability score: 0.8356481481481481


training results for model: log_reg, selector function: f_classif, percentile: 20
info: 0
selected features: [ 12  19  20  24  26  30  31  38  51  53  54  58  59  63  73  84  89  92
  93  96  97 104 107 110 114 115 116 117 118 119 120 122 123 126 135 150
 151 154 155 156 157 169 172 176 178 179 181 182 187 192 193 215 217 249
 250 253 254 255 256 268 271 278 282 286 293 294 309 320 337 338 343 350
 351 354 355 356 357 369 372 376 378 379 381 387 409 431 434 435 437 438
 440 441 457 459 461]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6741496598639456, precision=0.13953488372093023, recall=0.6, f1=0.22641509433962265, roc_auc=0.6741496598639456)

info: 1
selected features: [ 12  19  20  24  26  30  31  36  38  51  53  54  58  59  60  62  63  64
  70  73  84  89  92  93  95  96  97 104 107 114 115 116 117 118 120 122
 123 126 130 135 150 151 154 155 156 157 166 169 179 182 187 192 215 217
 229 236 249 250 253 254 255 268 282 286 293 309 320 332 350 351 354 355
 356 357 366 369 376 378 387 397 409 410 414 426 434 435 437 438 440 441
 449 451 453 457 459]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5833333333333333, precision=0.09259259259259259, recall=0.5, f1=0.15625, roc_auc=0.5833333333333334)

info: 2
selected features: [ 12  19  20  24  26  30  31  36  38  51  54  59  60  63  70  72  73  89
  92  93  96 104 107 114 115 116 117 118 119 120 122 123 126 150 151 154
 155 156 157 169 172 178 179 181 182 185 187 192 215 217 249 250 253 254
 255 256 268 271 278 282 284 286 293 309 320 350 351 354 355 356 357 369
 372 376 378 379 381 385 387 397 409 410 414 426 427 429 434 435 437 438
 441 453 457 459 466]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5585034013605442, precision=0.07792207792207792, recall=0.6, f1=0.1379310344827586, roc_auc=0.5585034013605442)

info: 3
selected features: [ 10  12  19  20  24  26  30  31  36  51  53  54  58  59  60  63  64  70
  73  89  93  96 104 114 115 116 117 118 119 120 122 123 126 143 150 151
 154 155 156 169 170 172 176 178 179 181 182 185 187 192 215 242 249 250
 253 254 255 268 269 271 276 282 286 293 294 339 343 345 350 351 354 355
 356 369 370 372 376 378 379 381 385 387 409 414 426 427 429 434 435 437
 438 440 441 457 459]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5893524283935243, precision=0.12903225806451613, recall=0.36363636363636365, f1=0.19047619047619047, roc_auc=0.5893524283935244)

info: 4
selected features: [ 12  19  20  24  26  31  35  36  51  53  54  58  59  60  63  64  70  73
  84  89  93  96 104 107 108 114 115 116 117 118 119 120 122 123 126 131
 138 150 151 154 155 156 157 169 178 179 181 182 187 192 195 215 217 227
 236 237 249 250 253 254 255 268 282 286 293 296 320 333 338 350 351 353
 354 355 356 357 369 376 378 379 381 387 409 410 414 426 434 435 437 438
 440 441 457 459 461]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5825031133250311, precision=0.12121212121212122, recall=0.36363636363636365, f1=0.18181818181818182, roc_auc=0.5825031133250312)

info: 5
selected features: [ 12  19  20  24  26  29  30  31  38  51  53  54  58  59  63  70  73  84
  89  92  93  96 104 107 114 115 116 117 118 119 120 122 123 126 150 151
 154 155 156 169 172 176 178 179 181 182 185 187 192 193 208 215 217 237
 249 250 253 254 255 268 271 282 286 293 294 309 320 350 351 353 354 355
 356 369 372 376 379 381 385 387 409 414 426 435 438 441 449 451 453 456
 457 458 459 460 461]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6674968866749689, precision=0.13725490196078433, recall=0.6363636363636364, f1=0.22580645161290325, roc_auc=0.6674968866749689)

info: 6
selected features: [ 12  19  20  24  26  31  51  53  54  58  59  60  61  64  72  73  84  95
  96 104 107 114 115 116 117 118 119 120 122 123 126 131 137 150 151 154
 155 156 157 161 169 172 178 179 181 182 185 187 192 193 195 215 217 236
 237 249 250 253 254 255 268 271 276 278 282 293 294 296 309 320 333 343
 350 351 354 355 356 357 361 369 372 376 378 379 381 385 387 397 409 414
 426 427 457 459 466]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6469489414694893, precision=0.12280701754385964, recall=0.6363636363636364, f1=0.20588235294117646, roc_auc=0.6469489414694893)

info: 7
selected features: [ 12  19  20  24  26  30  31  38  51  54  58  59  62  64  70  73  84  89
  93  96 104 107 108 114 115 116 117 118 120 122 123 126 150 151 154 155
 156 157 169 172 178 179 181 182 185 187 189 192 208 215 217 249 250 253
 254 255 256 268 271 277 278 280 281 282 286 288 293 309 320 350 351 354
 355 356 357 369 372 376 379 381 387 389 393 409 410 426 427 429 434 435
 437 438 440 441 446]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7164383561643836, precision=0.15217391304347827, recall=0.7, f1=0.25, roc_auc=0.7164383561643836)

info: 8
selected features: [ 12  19  20  24  26  29  31  36  51  53  54  58  59  60  64  73  84  89
  93  96 104 107 114 115 116 117 118 119 120 122 123 126 131 136 137 138
 150 151 154 155 156 157 166 169 172 176 192 193 215 217 235 236 237 249
 250 253 254 255 256 265 268 271 293 294 309 314 320 333 338 343 350 351
 353 354 355 356 357 366 369 372 376 393 397 409 410 414 427 434 435 438
 441 457 459 461 466]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.8047945205479452, precision=0.14925373134328357, recall=1.0, f1=0.2597402597402597, roc_auc=0.8047945205479452)

info: 9
selected features: [ 12  19  20  24  26  29  30  31  36  51  53  54  58  59  63  64  70  73
  89  92  93  96 104 114 115 116 117 118 119 120 122 123 126 131 135 137
 150 151 154 155 156 157 166 169 176 177 178 179 181 182 187 192 195 215
 236 237 249 250 253 254 255 256 265 268 282 286 293 296 309 318 333 337
 343 350 351 353 354 355 356 357 366 369 376 377 378 379 381 387 409 410
 414 431 446 457 459]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6938356164383561, precision=0.16216216216216217, recall=0.6, f1=0.25531914893617025, roc_auc=0.6938356164383562)

score averages:
average balanced accuracy: 0.6517356257571522
average precision: 0.1283945659565806
average recall: 0.6
average f1 score: 0.20896387143472633
average roc auc score: 0.6517356257571522
feature counts: Counter({12: 10, 19: 10, 20: 10, 24: 10, 26: 10, 31: 10, 51: 10, 54: 10, 59: 10, 73: 10, 96: 10, 104: 10, 114: 10, 115: 10, 116: 10, 117: 10, 118: 10, 120: 10, 122: 10, 123: 10, 126: 10, 150: 10, 151: 10, 154: 10, 155: 10, 156: 10, 169: 10, 192: 10, 215: 10, 249: 10, 250: 10, 253: 10, 254: 10, 255: 10, 268: 10, 293: 10, 350: 10, 351: 10, 354: 10, 355: 10, 356: 10, 369: 10, 376: 10, 409: 10, 58: 9, 89: 9, 93: 9, 179: 9, 182: 9, 187: 9, 282: 9, 387: 9, 457: 9, 459: 9, 53: 8, 107: 8, 119: 8, 157: 8, 178: 8, 181: 8, 217: 8, 286: 8, 309: 8, 320: 8, 357: 8, 379: 8, 381: 8, 435: 8, 438: 8, 441: 8, 414: 8, 30: 7, 63: 7, 84: 7, 172: 7, 271: 7, 372: 7, 378: 7, 434: 7, 64: 7, 70: 7, 426: 7, 437: 6, 36: 6, 60: 6, 410: 6, 38: 5, 92: 5, 176: 5, 256: 5, 294: 5, 343: 5, 440: 5, 236: 5, 185: 5, 427: 5, 237: 5, 193: 4, 278: 4, 461: 4, 397: 4, 385: 4, 131: 4, 333: 4, 353: 4, 135: 3, 338: 3, 166: 3, 366: 3, 453: 3, 429: 3, 466: 3, 195: 3, 296: 3, 29: 3, 137: 3, 97: 2, 337: 2, 431: 2, 62: 2, 95: 2, 449: 2, 451: 2, 72: 2, 276: 2, 108: 2, 138: 2, 208: 2, 393: 2, 446: 2, 265: 2, 110: 1, 130: 1, 229: 1, 332: 1, 284: 1, 10: 1, 143: 1, 170: 1, 242: 1, 269: 1, 339: 1, 345: 1, 370: 1, 35: 1, 227: 1, 456: 1, 458: 1, 460: 1, 61: 1, 161: 1, 361: 1, 189: 1, 277: 1, 280: 1, 281: 1, 288: 1, 389: 1, 136: 1, 235: 1, 314: 1, 177: 1, 318: 1, 377: 1})
feature stability score: 0.9192982456140351


training results for model: log_reg, selector function: mutual_info_classif, percentile: 20
info: 0
selected features: [  2   5  10  17  30  31  34  35  36  38  39  51  58  60  64  72  73  78
  82  85 104 112 117 118 119 120 121 123 125 126 127 130 135 144 163 164
 165 166 168 177 187 188 207 215 225 226 230 231 232 233 238 243 245 250
 260 262 263 264 265 266 267 276 283 284 286 327 328 329 333 334 335 336
 337 345 348 363 364 366 367 368 387 406 409 421 425 443 444 445 454 455
 457 458 459 461 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.522108843537415, precision=0.06944444444444445, recall=0.5, f1=0.12195121951219513, roc_auc=0.5221088435374149)

info: 1
selected features: [  2   5  17  25  26  31  33  35  37  38  39  50  51  52  60  64  66  72
  78  82  83  85  96 115 117 118 119 120 121 122 123 124 125 126 127 130
 131 134 144 146 156 163 164 165 168 211 224 225 226 227 230 231 232 233
 234 243 244 245 262 263 264 267 276 284 327 328 329 333 334 335 337 348
 363 364 367 368 387 409 414 423 424 425 427 445 454 455 457 458 459 460
 461 467 470 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5343537414965986, precision=0.08108108108108109, recall=0.3, f1=0.12765957446808512, roc_auc=0.5343537414965986)

info: 2
selected features: [  2   3   5   6  17  30  31  32  33  34  35  37  38  39  51  52  54  60
  64  72  83  96 114 115 117 118 119 120 121 123 125 126 127 130 131 135
 144 146 156 163 164 165 177 207 215 224 226 230 231 232 233 243 244 245
 262 263 264 265 266 274 276 284 306 327 328 329 333 334 335 336 337 348
 363 366 367 368 377 387 399 409 423 424 425 444 445 454 455 456 457 458
 459 460 461 472 473]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.4571428571428572, precision=0.045454545454545456, recall=0.2, f1=0.07407407407407407, roc_auc=0.45714285714285713)

info: 3
selected features: [  2   3   5  15  17  26  30  31  33  34  35  36  37  38  39  50  51  52
  54  59  60  73  78  83 103 118 119 120 121 123 124 126 127 131 132 133
 144 161 162 164 168 169 171 173 187 207 215 230 231 232 233 242 243 260
 261 262 263 264 265 274 276 283 284 327 329 333 334 335 336 337 344 348
 361 363 366 367 368 387 404 408 409 414 423 424 425 454 455 456 457 458
 459 461 467 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5955790784557908, precision=0.09722222222222222, recall=0.6363636363636364, f1=0.16867469879518074, roc_auc=0.5955790784557908)

info: 4
selected features: [  2   5  12  17  19  23  31  33  36  37  38  39  53  54  56  59  64  67
  78  83  85 114 115 117 118 119 120 121 123 124 125 126 127 130 131 132
 133 144 146 168 187 201 215 224 225 226 230 231 233 243 244 247 264 265
 267 274 276 284 306 327 328 329 333 334 335 337 348 363 365 366 367 368
 377 387 406 409 412 414 421 423 424 425 434 445 454 455 456 457 458 459
 460 461 466 467 473]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.674346201743462, precision=0.14285714285714285, recall=0.6363636363636364, f1=0.23333333333333328, roc_auc=0.6743462017434619)

info: 5
selected features: [  2   5  26  30  31  33  35  36  37  38  39  50  51  53  54  60  78  82
  83  93  96 104 114 115 118 120 121 123 125 127 130 131 132 144 146 156
 163 164 165 177 194 204 207 212 230 231 232 233 234 238 243 260 262 263
 264 274 276 278 284 286 287 306 310 328 329 333 337 346 348 352 363 377
 387 403 406 409 414 423 424 425 427 437 442 445 454 455 456 457 458 459
 460 461 467 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5843711083437111, precision=0.09836065573770492, recall=0.5454545454545454, f1=0.16666666666666666, roc_auc=0.5843711083437111)

info: 6
selected features: [  2   5   6  13  15  17  26  31  33  35  38  39  51  59  60  64  78  83
  85 105 114 115 117 119 120 121 123 124 125 126 127 131 133 144 154 163
 165 169 177 194 207 215 224 226 230 231 232 233 242 243 250 262 263 264
 265 276 283 284 310 314 327 328 329 330 333 336 337 344 348 363 364 365
 366 369 377 387 398 409 414 421 423 424 425 427 446 454 455 457 458 459
 460 461 467 470 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5921544209215441, precision=0.0958904109589041, recall=0.6363636363636364, f1=0.16666666666666663, roc_auc=0.5921544209215441)

info: 7
selected features: [  2   3   5  15  17  19  31  33  35  38  39  50  51  52  54  60  64  72
  82  85 103 104 105 115 117 118 119 120 121 123 124 125 126 127 131 132
 144 149 157 159 163 164 165 166 168 171 173 187 215 225 230 231 232 233
 238 243 260 263 264 267 276 327 328 329 333 334 335 337 348 357 363 364
 368 387 390 398 406 409 410 423 424 425 444 445 446 454 455 457 458 459
 460 461 467 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6835616438356165, precision=0.15, recall=0.6, f1=0.24, roc_auc=0.6835616438356165)

info: 8
selected features: [  2   3   5  15  17  19  23  31  35  36  38  39  51  54  59  60  64  72
  73  76  85 104 114 115 119 120 121 123 124 125 126 127 130 131 144 146
 149 163 165 169 177 187 192 202 208 213 225 226 230 231 232 233 238 243
 245 260 263 267 276 283 300 327 328 329 330 333 334 336 337 344 348 363
 366 367 387 406 408 409 414 423 424 425 444 445 454 455 456 457 458 459
 460 461 467 472 473]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5561643835616439, precision=0.08695652173913043, recall=0.4, f1=0.14285714285714285, roc_auc=0.5561643835616438)

info: 9
selected features: [  2  12  15  17  23  30  31  33  35  36  37  38  39  51  52  53  54  60
  64  72  78  82  83 115 117 119 120 121 123 124 125 127 130 131 133 134
 144 161 163 165 169 177 194 215 224 226 230 231 232 233 243 263 264 265
 274 275 276 283 284 291 297 303 314 327 328 329 333 335 337 344 348 363
 366 367 387 399 408 409 414 423 424 425 444 445 454 455 456 457 458 459
 460 461 467 469 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5767123287671233, precision=0.1, recall=0.4, f1=0.16000000000000003, roc_auc=0.5767123287671233)

score averages:
average balanced accuracy: 0.5776494607805762
average precision: 0.09672670244951755
average recall: 0.48545454545454547
average f1 score: 0.16018833763733445
average roc auc score: 0.5776494607805762
feature counts: Counter({2: 10, 31: 10, 38: 10, 39: 10, 120: 10, 121: 10, 123: 10, 127: 10, 144: 10, 230: 10, 231: 10, 233: 10, 243: 10, 276: 10, 329: 10, 333: 10, 337: 10, 348: 10, 363: 10, 387: 10, 409: 10, 425: 10, 454: 10, 455: 10, 457: 10, 458: 10, 459: 10, 461: 10, 473: 10, 5: 9, 17: 9, 35: 9, 51: 9, 60: 9, 119: 9, 125: 9, 232: 9, 263: 9, 264: 9, 327: 9, 328: 9, 131: 9, 423: 9, 424: 9, 64: 8, 126: 8, 163: 8, 165: 8, 284: 8, 445: 8, 33: 8, 115: 8, 460: 8, 467: 8, 78: 7, 117: 7, 118: 7, 130: 7, 215: 7, 226: 7, 334: 7, 335: 7, 366: 7, 367: 7, 83: 7, 124: 7, 414: 7, 54: 7, 36: 6, 72: 6, 85: 6, 164: 6, 177: 6, 262: 6, 265: 6, 368: 6, 37: 6, 472: 6, 456: 6, 30: 5, 82: 5, 168: 5, 187: 5, 207: 5, 225: 5, 260: 5, 267: 5, 283: 5, 336: 5, 406: 5, 444: 5, 52: 5, 146: 5, 224: 5, 114: 5, 274: 5, 15: 5, 104: 4, 238: 4, 245: 4, 364: 4, 26: 4, 50: 4, 3: 4, 377: 4, 59: 4, 132: 4, 133: 4, 169: 4, 344: 4, 34: 3, 73: 3, 421: 3, 96: 3, 156: 3, 244: 3, 427: 3, 306: 3, 408: 3, 19: 3, 23: 3, 53: 3, 194: 3, 135: 2, 166: 2, 250: 2, 266: 2, 286: 2, 134: 2, 234: 2, 470: 2, 6: 2, 399: 2, 103: 2, 161: 2, 171: 2, 173: 2, 242: 2, 12: 2, 365: 2, 310: 2, 105: 2, 314: 2, 330: 2, 398: 2, 446: 2, 149: 2, 10: 1, 58: 1, 112: 1, 188: 1, 345: 1, 443: 1, 25: 1, 66: 1, 122: 1, 211: 1, 227: 1, 32: 1, 162: 1, 261: 1, 361: 1, 404: 1, 56: 1, 67: 1, 201: 1, 247: 1, 412: 1, 434: 1, 466: 1, 93: 1, 204: 1, 212: 1, 278: 1, 287: 1, 346: 1, 352: 1, 403: 1, 437: 1, 442: 1, 13: 1, 154: 1, 369: 1, 157: 1, 159: 1, 357: 1, 390: 1, 410: 1, 76: 1, 192: 1, 202: 1, 208: 1, 213: 1, 300: 1, 275: 1, 291: 1, 297: 1, 303: 1, 469: 1})
feature stability score: 0.8783625730994152


training results for model: log_reg, selector function: f_classif, percentile: 100
info: 0
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7081632653061225, precision=0.18181818181818182, recall=0.6, f1=0.27906976744186046, roc_auc=0.7081632653061225)

info: 1
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5945578231292517, precision=0.11428571428571428, recall=0.4, f1=0.17777777777777776, roc_auc=0.5945578231292517)

info: 2
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6887755102040816, precision=0.21739130434782608, recall=0.5, f1=0.30303030303030304, roc_auc=0.6887755102040817)

info: 3
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5532378580323786, precision=0.15384615384615385, recall=0.18181818181818182, f1=0.16666666666666669, roc_auc=0.5532378580323787)

info: 4
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7036114570361146, precision=0.13043478260869565, recall=0.8181818181818182, f1=0.225, roc_auc=0.7036114570361146)

info: 5
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5389165628891657, precision=0.08333333333333333, recall=0.45454545454545453, f1=0.1408450704225352, roc_auc=0.5389165628891657)

info: 6
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5712951432129514, precision=0.13636363636363635, recall=0.2727272727272727, f1=0.1818181818181818, roc_auc=0.5712951432129514)

info: 7
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5280821917808219, precision=0.08695652173913043, recall=0.2, f1=0.12121212121212122, roc_auc=0.5280821917808218)

info: 8
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6315068493150685, precision=0.16666666666666666, recall=0.4, f1=0.23529411764705882, roc_auc=0.6315068493150685)

info: 9
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5178082191780822, precision=0.07692307692307693, recall=0.2, f1=0.1111111111111111, roc_auc=0.5178082191780822)

score averages:
average balanced accuracy: 0.6035954880084039
average precision: 0.13480193719324154
average recall: 0.4027272727272727
average f1 score: 0.1941825117127616
average roc auc score: 0.6035954880084039
feature counts: Counter({0: 10, 1: 10, 2: 10, 3: 10, 4: 10, 5: 10, 6: 10, 7: 10, 8: 10, 9: 10, 10: 10, 11: 10, 12: 10, 13: 10, 14: 10, 15: 10, 16: 10, 17: 10, 18: 10, 19: 10, 20: 10, 21: 10, 22: 10, 23: 10, 24: 10, 25: 10, 26: 10, 27: 10, 28: 10, 29: 10, 30: 10, 31: 10, 32: 10, 33: 10, 34: 10, 35: 10, 36: 10, 37: 10, 38: 10, 39: 10, 40: 10, 41: 10, 42: 10, 43: 10, 44: 10, 45: 10, 46: 10, 47: 10, 48: 10, 49: 10, 50: 10, 51: 10, 52: 10, 53: 10, 54: 10, 55: 10, 56: 10, 57: 10, 58: 10, 59: 10, 60: 10, 61: 10, 62: 10, 63: 10, 64: 10, 65: 10, 66: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 72: 10, 73: 10, 74: 10, 75: 10, 76: 10, 77: 10, 78: 10, 79: 10, 80: 10, 81: 10, 82: 10, 83: 10, 84: 10, 85: 10, 86: 10, 87: 10, 88: 10, 89: 10, 90: 10, 91: 10, 92: 10, 93: 10, 94: 10, 95: 10, 96: 10, 97: 10, 98: 10, 99: 10, 100: 10, 101: 10, 102: 10, 103: 10, 104: 10, 105: 10, 106: 10, 107: 10, 108: 10, 109: 10, 110: 10, 111: 10, 112: 10, 113: 10, 114: 10, 115: 10, 116: 10, 117: 10, 118: 10, 119: 10, 120: 10, 121: 10, 122: 10, 123: 10, 124: 10, 125: 10, 126: 10, 127: 10, 128: 10, 129: 10, 130: 10, 131: 10, 132: 10, 133: 10, 134: 10, 135: 10, 136: 10, 137: 10, 138: 10, 139: 10, 140: 10, 141: 10, 142: 10, 143: 10, 144: 10, 145: 10, 146: 10, 147: 10, 148: 10, 149: 10, 150: 10, 151: 10, 152: 10, 153: 10, 154: 10, 155: 10, 156: 10, 157: 10, 158: 10, 159: 10, 160: 10, 161: 10, 162: 10, 163: 10, 164: 10, 165: 10, 166: 10, 167: 10, 168: 10, 169: 10, 170: 10, 171: 10, 172: 10, 173: 10, 174: 10, 175: 10, 176: 10, 177: 10, 178: 10, 179: 10, 180: 10, 181: 10, 182: 10, 183: 10, 184: 10, 185: 10, 186: 10, 187: 10, 188: 10, 189: 10, 190: 10, 191: 10, 192: 10, 193: 10, 194: 10, 195: 10, 196: 10, 197: 10, 198: 10, 199: 10, 200: 10, 201: 10, 202: 10, 203: 10, 204: 10, 205: 10, 206: 10, 207: 10, 208: 10, 209: 10, 210: 10, 211: 10, 212: 10, 213: 10, 214: 10, 215: 10, 216: 10, 217: 10, 218: 10, 219: 10, 220: 10, 221: 10, 222: 10, 223: 10, 224: 10, 225: 10, 226: 10, 227: 10, 228: 10, 229: 10, 230: 10, 231: 10, 232: 10, 233: 10, 234: 10, 235: 10, 236: 10, 237: 10, 238: 10, 239: 10, 240: 10, 241: 10, 242: 10, 243: 10, 244: 10, 245: 10, 246: 10, 247: 10, 248: 10, 249: 10, 250: 10, 251: 10, 252: 10, 253: 10, 254: 10, 255: 10, 256: 10, 257: 10, 258: 10, 259: 10, 260: 10, 261: 10, 262: 10, 263: 10, 264: 10, 265: 10, 266: 10, 267: 10, 268: 10, 269: 10, 270: 10, 271: 10, 272: 10, 273: 10, 274: 10, 275: 10, 276: 10, 277: 10, 278: 10, 279: 10, 280: 10, 281: 10, 282: 10, 283: 10, 284: 10, 285: 10, 286: 10, 287: 10, 288: 10, 289: 10, 290: 10, 291: 10, 292: 10, 293: 10, 294: 10, 295: 10, 296: 10, 297: 10, 298: 10, 299: 10, 300: 10, 301: 10, 302: 10, 303: 10, 304: 10, 305: 10, 306: 10, 307: 10, 308: 10, 309: 10, 310: 10, 311: 10, 312: 10, 313: 10, 314: 10, 315: 10, 316: 10, 317: 10, 318: 10, 319: 10, 320: 10, 321: 10, 322: 10, 323: 10, 324: 10, 325: 10, 326: 10, 327: 10, 328: 10, 329: 10, 330: 10, 331: 10, 332: 10, 333: 10, 334: 10, 335: 10, 336: 10, 337: 10, 338: 10, 339: 10, 340: 10, 341: 10, 342: 10, 343: 10, 344: 10, 345: 10, 346: 10, 347: 10, 348: 10, 349: 10, 350: 10, 351: 10, 352: 10, 353: 10, 354: 10, 355: 10, 356: 10, 357: 10, 358: 10, 359: 10, 360: 10, 361: 10, 362: 10, 363: 10, 364: 10, 365: 10, 366: 10, 367: 10, 368: 10, 369: 10, 370: 10, 371: 10, 372: 10, 373: 10, 374: 10, 375: 10, 376: 10, 377: 10, 378: 10, 379: 10, 380: 10, 381: 10, 382: 10, 383: 10, 384: 10, 385: 10, 386: 10, 387: 10, 388: 10, 389: 10, 390: 10, 391: 10, 392: 10, 393: 10, 394: 10, 395: 10, 396: 10, 397: 10, 398: 10, 399: 10, 400: 10, 401: 10, 402: 10, 403: 10, 404: 10, 405: 10, 406: 10, 407: 10, 408: 10, 409: 10, 410: 10, 411: 10, 412: 10, 413: 10, 414: 10, 415: 10, 416: 10, 417: 10, 418: 10, 419: 10, 420: 10, 421: 10, 422: 10, 423: 10, 424: 10, 425: 10, 426: 10, 427: 10, 428: 10, 429: 10, 430: 10, 431: 10, 432: 10, 433: 10, 434: 10, 435: 10, 436: 10, 437: 10, 438: 10, 439: 10, 440: 10, 441: 10, 442: 10, 443: 10, 444: 10, 445: 10, 446: 10, 447: 10, 448: 10, 449: 10, 450: 10, 451: 10, 452: 10, 453: 10, 454: 10, 455: 10, 456: 10, 457: 10, 458: 10, 459: 10, 460: 10, 461: 10, 462: 10, 463: 10, 464: 10, 465: 10, 466: 10, 467: 10, 468: 10, 469: 10, 470: 10, 471: 10, 472: 10, 473: 10})
feature stability score: 1.0


training results for model: log_reg, selector function: mutual_info_classif, percentile: 100
info: 0
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7527210884353741, precision=0.13432835820895522, recall=0.9, f1=0.23376623376623376, roc_auc=0.7527210884353741)

info: 1
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5459183673469388, precision=0.07692307692307693, recall=0.5, f1=0.13333333333333336, roc_auc=0.5459183673469388)

info: 2
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 0.1, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6513605442176871, precision=0.14705882352941177, recall=0.5, f1=0.22727272727272727, roc_auc=0.6513605442176871)

info: 3
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.675280199252802, precision=0.12698412698412698, recall=0.7272727272727273, f1=0.2162162162162162, roc_auc=0.675280199252802)

info: 4
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5526151930261519, precision=0.08928571428571429, recall=0.45454545454545453, f1=0.1492537313432836, roc_auc=0.5526151930261519)

info: 5
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5672478206724783, precision=0.09090909090909091, recall=0.5454545454545454, f1=0.15584415584415584, roc_auc=0.5672478206724781)

info: 6
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.6724782067247821, precision=0.23809523809523808, recall=0.45454545454545453, f1=0.31249999999999994, roc_auc=0.6724782067247821)

info: 7
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5746575342465753, precision=0.12, recall=0.3, f1=0.17142857142857143, roc_auc=0.5746575342465754)

info: 8
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 0.01, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.7513698630136987, precision=0.13432835820895522, recall=0.9, f1=0.23376623376623376, roc_auc=0.7513698630136986)

info: 9
selected features: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473]
hyperparameters: {'C': 10, 'class_weight': {0: 0.06636885768985322, 1: 0.9336311423101468}, 'max_iter': 10000, 'solver': 'liblinear'}
scores: Scores(balanced_accuracy=0.5417808219178082, precision=0.10526315789473684, recall=0.2, f1=0.13793103448275862, roc_auc=0.5417808219178082)

score averages:
average balanced accuracy: 0.6285429638854296
average precision: 0.12631759450393062
average recall: 0.5481818181818182
average f1 score: 0.19713122374535139
average roc auc score: 0.6285429638854296
feature counts: Counter({0: 10, 1: 10, 2: 10, 3: 10, 4: 10, 5: 10, 6: 10, 7: 10, 8: 10, 9: 10, 10: 10, 11: 10, 12: 10, 13: 10, 14: 10, 15: 10, 16: 10, 17: 10, 18: 10, 19: 10, 20: 10, 21: 10, 22: 10, 23: 10, 24: 10, 25: 10, 26: 10, 27: 10, 28: 10, 29: 10, 30: 10, 31: 10, 32: 10, 33: 10, 34: 10, 35: 10, 36: 10, 37: 10, 38: 10, 39: 10, 40: 10, 41: 10, 42: 10, 43: 10, 44: 10, 45: 10, 46: 10, 47: 10, 48: 10, 49: 10, 50: 10, 51: 10, 52: 10, 53: 10, 54: 10, 55: 10, 56: 10, 57: 10, 58: 10, 59: 10, 60: 10, 61: 10, 62: 10, 63: 10, 64: 10, 65: 10, 66: 10, 67: 10, 68: 10, 69: 10, 70: 10, 71: 10, 72: 10, 73: 10, 74: 10, 75: 10, 76: 10, 77: 10, 78: 10, 79: 10, 80: 10, 81: 10, 82: 10, 83: 10, 84: 10, 85: 10, 86: 10, 87: 10, 88: 10, 89: 10, 90: 10, 91: 10, 92: 10, 93: 10, 94: 10, 95: 10, 96: 10, 97: 10, 98: 10, 99: 10, 100: 10, 101: 10, 102: 10, 103: 10, 104: 10, 105: 10, 106: 10, 107: 10, 108: 10, 109: 10, 110: 10, 111: 10, 112: 10, 113: 10, 114: 10, 115: 10, 116: 10, 117: 10, 118: 10, 119: 10, 120: 10, 121: 10, 122: 10, 123: 10, 124: 10, 125: 10, 126: 10, 127: 10, 128: 10, 129: 10, 130: 10, 131: 10, 132: 10, 133: 10, 134: 10, 135: 10, 136: 10, 137: 10, 138: 10, 139: 10, 140: 10, 141: 10, 142: 10, 143: 10, 144: 10, 145: 10, 146: 10, 147: 10, 148: 10, 149: 10, 150: 10, 151: 10, 152: 10, 153: 10, 154: 10, 155: 10, 156: 10, 157: 10, 158: 10, 159: 10, 160: 10, 161: 10, 162: 10, 163: 10, 164: 10, 165: 10, 166: 10, 167: 10, 168: 10, 169: 10, 170: 10, 171: 10, 172: 10, 173: 10, 174: 10, 175: 10, 176: 10, 177: 10, 178: 10, 179: 10, 180: 10, 181: 10, 182: 10, 183: 10, 184: 10, 185: 10, 186: 10, 187: 10, 188: 10, 189: 10, 190: 10, 191: 10, 192: 10, 193: 10, 194: 10, 195: 10, 196: 10, 197: 10, 198: 10, 199: 10, 200: 10, 201: 10, 202: 10, 203: 10, 204: 10, 205: 10, 206: 10, 207: 10, 208: 10, 209: 10, 210: 10, 211: 10, 212: 10, 213: 10, 214: 10, 215: 10, 216: 10, 217: 10, 218: 10, 219: 10, 220: 10, 221: 10, 222: 10, 223: 10, 224: 10, 225: 10, 226: 10, 227: 10, 228: 10, 229: 10, 230: 10, 231: 10, 232: 10, 233: 10, 234: 10, 235: 10, 236: 10, 237: 10, 238: 10, 239: 10, 240: 10, 241: 10, 242: 10, 243: 10, 244: 10, 245: 10, 246: 10, 247: 10, 248: 10, 249: 10, 250: 10, 251: 10, 252: 10, 253: 10, 254: 10, 255: 10, 256: 10, 257: 10, 258: 10, 259: 10, 260: 10, 261: 10, 262: 10, 263: 10, 264: 10, 265: 10, 266: 10, 267: 10, 268: 10, 269: 10, 270: 10, 271: 10, 272: 10, 273: 10, 274: 10, 275: 10, 276: 10, 277: 10, 278: 10, 279: 10, 280: 10, 281: 10, 282: 10, 283: 10, 284: 10, 285: 10, 286: 10, 287: 10, 288: 10, 289: 10, 290: 10, 291: 10, 292: 10, 293: 10, 294: 10, 295: 10, 296: 10, 297: 10, 298: 10, 299: 10, 300: 10, 301: 10, 302: 10, 303: 10, 304: 10, 305: 10, 306: 10, 307: 10, 308: 10, 309: 10, 310: 10, 311: 10, 312: 10, 313: 10, 314: 10, 315: 10, 316: 10, 317: 10, 318: 10, 319: 10, 320: 10, 321: 10, 322: 10, 323: 10, 324: 10, 325: 10, 326: 10, 327: 10, 328: 10, 329: 10, 330: 10, 331: 10, 332: 10, 333: 10, 334: 10, 335: 10, 336: 10, 337: 10, 338: 10, 339: 10, 340: 10, 341: 10, 342: 10, 343: 10, 344: 10, 345: 10, 346: 10, 347: 10, 348: 10, 349: 10, 350: 10, 351: 10, 352: 10, 353: 10, 354: 10, 355: 10, 356: 10, 357: 10, 358: 10, 359: 10, 360: 10, 361: 10, 362: 10, 363: 10, 364: 10, 365: 10, 366: 10, 367: 10, 368: 10, 369: 10, 370: 10, 371: 10, 372: 10, 373: 10, 374: 10, 375: 10, 376: 10, 377: 10, 378: 10, 379: 10, 380: 10, 381: 10, 382: 10, 383: 10, 384: 10, 385: 10, 386: 10, 387: 10, 388: 10, 389: 10, 390: 10, 391: 10, 392: 10, 393: 10, 394: 10, 395: 10, 396: 10, 397: 10, 398: 10, 399: 10, 400: 10, 401: 10, 402: 10, 403: 10, 404: 10, 405: 10, 406: 10, 407: 10, 408: 10, 409: 10, 410: 10, 411: 10, 412: 10, 413: 10, 414: 10, 415: 10, 416: 10, 417: 10, 418: 10, 419: 10, 420: 10, 421: 10, 422: 10, 423: 10, 424: 10, 425: 10, 426: 10, 427: 10, 428: 10, 429: 10, 430: 10, 431: 10, 432: 10, 433: 10, 434: 10, 435: 10, 436: 10, 437: 10, 438: 10, 439: 10, 440: 10, 441: 10, 442: 10, 443: 10, 444: 10, 445: 10, 446: 10, 447: 10, 448: 10, 449: 10, 450: 10, 451: 10, 452: 10, 453: 10, 454: 10, 455: 10, 456: 10, 457: 10, 458: 10, 459: 10, 460: 10, 461: 10, 462: 10, 463: 10, 464: 10, 465: 10, 466: 10, 467: 10, 468: 10, 469: 10, 470: 10, 471: 10, 472: 10, 473: 10})
feature stability score: 1.0


